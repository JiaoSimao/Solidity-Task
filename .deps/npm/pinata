/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/pinata@2.5.0/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var chunkBK3CLF3Z_js=require("./chunk-BK3CLF3Z.js"),analyticsDateInterval=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const r=new URLSearchParams;if(e){const{cid:t,gateway_domain:a,start_date:n,end_date:o,file_name:i,user_agent:s,country:u,region:c,referer:h,limit:d,sort_order:l,date_interval:p,sort_by:w}=e;t&&r.append("cid",t),a&&r.append("gateway_domain",a),n&&r.append("start_date",n),o&&r.append("end_date",o),i&&r.append("file_name",i),s&&r.append("user_agent",s.toString()),u&&r.append("country",u.toString()),c&&r.append("region",c),h&&r.append("referer",h.toString()),d&&r.append("limit",d.toString()),l&&r.append("sort_order",l),w&&r.append("sort_by",w),p&&r.append("by",p)}let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);const n=`${a}/ipfs/gateway_analytics_time_series?${r.toString()}`;try{let e;e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/analyticsDateInterval"};const r=await fetch(n,{method:"GET",headers:e});if(!r.ok){const t=await r.text();if(401===r.status||403===r.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,r.status,{error:t,code:"AUTH_ERROR",metadata:{requestUrl:r.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,r.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:r.url}})}const a=await r.json();return a.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing anaytics usage: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while fetching gateway usage")}},analyticsTopUsage=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const r=new URLSearchParams;if(e){const{cid:a,gateway_domain:n,start_date:o,end_date:i,file_name:s,user_agent:u,country:c,region:h,referer:d,limit:l,sort_order:p,sort_by:w,attribute:f}=e,g=n||t.pinataGateway;if(g){const t=g.replace(/^https?:\/\//,"");r.append("gateway_domain",t)}a&&r.append("cid",a),o&&r.append("start_date",o),i&&r.append("end_date",i),s&&r.append("file_name",s),u&&r.append("user_agent",u.toString()),c&&r.append("country",c.toString()),h&&r.append("region",h),d&&r.append("referer",d.toString()),l&&r.append("limit",l.toString()),p&&r.append("sort_order",p),w&&r.append("sort_by",w),f&&r.append("by",f)}let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);const n=`${a}/ipfs/gateway_analytics_top?${r.toString()}`;try{let e;e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/analyticsTopUsage"};const r=await fetch(n,{method:"GET",headers:e});if(!r.ok){const t=await r.text();if(401===r.status||403===r.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,r.status,{error:t,code:"AUTH_ERROR",metadata:{requestUrl:r.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,r.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:r.url}})}return await r.json()}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing anaytics usage: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while fetching gateway usage")}},testAuthentication=async t=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let e,r="https://api.pinata.cloud";t.endpointUrl&&(r=t.endpointUrl),e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/testAuthentication"};try{const t=await fetch(`${r}/data/testAuthentication`,{method:"GET",headers:e});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return await t.json()}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing authentication: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while testing authentication")}},wait=t=>new Promise((e=>{setTimeout(e,t)})),deleteFile=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=[];let n;n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/deleteFile"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);for(const t of e)try{const e=await fetch(`${o}/files/${r}/${t}`,{method:"DELETE",headers:n});if(await wait(300),!e.ok){const t=await e.text();if(401===e.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,e.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:e.url}});throw new chunkBK3CLF3Z_js.NetworkError("HTTP error",e.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:e.url}})}a.push({id:t,status:e.statusText})}catch(e){let r;r=e instanceof chunkBK3CLF3Z_js.PinataError?e.message:e instanceof Error?`Error deleting file ${t}: ${e.message}`:`An unknown error occurred while deleting file ${t}`,a.push({id:t,status:r})}return a},deleteFileVectors=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let r;r=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/vectorizeFile"};let a="https://uploads.pinata.cloud/v3";t.uploadUrl&&(a=t.uploadUrl);try{const t=await fetch(`${a}/vectorize/files/${e}`,{method:"DELETE",headers:r});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return await t.json()}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing vectorize file: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while vectorizing file")}},deleteSwap=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteSwap"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/files/${r}/swap/${e}`,{method:"DELETE",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError("Authentication failed",t.status,{error:e,code:"AUTH_ERROR"});if(403===t.status)throw new chunkBK3CLF3Z_js.PinataError("Unauthorized CID Swap Deletion",t.status,{error:e,code:"UNAUTHORIZED"});if(404===t.status)throw new chunkBK3CLF3Z_js.PinataError("CID not pinned to account",t.status,{error:e,code:"NOT_FOUND"});throw new chunkBK3CLF3Z_js.NetworkError("HTTP error occurred",t.status,{error:e,code:"NETWORK_ERROR"})}return t.statusText}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing deleteSwap: ${t.message}`,void 0,{code:"DELETE_SWAP_ERROR"});throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while deleting swap",void 0,{code:"UNKNOWN_ERROR"})}},listFiles=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=new URLSearchParams;if(r){const{name:t,group:e,cid:n,order:o,limit:i,mimeType:s,pageToken:u,cidPending:c,metadata:h,noGroup:d}=r;i&&a.append("limit",i.toString()),t&&a.append("name",t),e&&a.append("group",e),n&&a.append("cid",n),s&&a.append("mimeType",s),o&&a.append("order",o),u&&a.append("pageToken",u),c&&a.append("cidPending","true"),d&&a.append("group","null"),h&&"object"==typeof h&&Object.entries(h).forEach((([t,e])=>{a.append(`keyvalues[${t.toString()}]`,e.toString())}))}let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);const o=`${n}/files/${e}?${a.toString()}`;try{let e;e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/listFiles"};const r=await fetch(o,{method:"GET",headers:e});if(!r.ok){const t=await r.text();if(401===r.status||403===r.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,r.status,{error:t,code:"AUTH_ERROR",metadata:{requestUrl:r.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,r.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:r.url}})}const a=await r.json();return a.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing list files: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while listing files")}},pinnedFileCount=async t=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let e,r="https://api.pinata.cloud";t.endpointUrl&&(r=t.endpointUrl),e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/pinnedFileUsage"};try{const t=await fetch(`${r}/data/userPinnedDataTotal`,{method:"GET",headers:e});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return(await t.json()).pin_count}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing pinnedFileUsage: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while getting pinned file usage")}},swapCid=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=JSON.stringify({swap_cid:e.swapCid});let n;n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapCid"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const t=await fetch(`${o}/files/${r}/swap/${e.cid}`,{method:"PUT",headers:n,body:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});if(403===t.status)throw new chunkBK3CLF3Z_js.PinataError("Unauthorized CID Swap",t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});if(404===t.status)throw new chunkBK3CLF3Z_js.PinataError("CID not pinned to account",t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const i=await t.json();return i.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing CID Swap: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while swapping CID")}},swapHistory=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapHistory"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/files/${r}/swap/${e.cid}?domain=${e.domain}`,{method:"GET",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});if(404===t.status)throw new chunkBK3CLF3Z_js.PinataError("CID does not have history",t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const o=await t.json();return o.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error fetching swap history: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while fetching swap history")}},totalStorageUsage=async t=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let e,r="https://api.pinata.cloud";t.endpointUrl&&(r=t.endpointUrl),e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/totalStorageUsage"};try{const t=await fetch(`${r}/data/userPinnedDataTotal`,{method:"GET",headers:e});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return(await t.json()).pin_size_total}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing totalStorageUsage: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while getting total storage usage")}},updateFile=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");if(!(e.name||e.keyvalues&&0!==Object.keys(e.keyvalues).length))throw new chunkBK3CLF3Z_js.ValidationError("At least one of 'name' or 'keyvalues' must be provided");const a={};void 0!==e.name&&(a.name=e.name),e.keyvalues&&Object.keys(e.keyvalues).length>0&&(a.keyvalues=e.keyvalues);const n=JSON.stringify(a);let o;o=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateMetadata"};let i="https://api.pinata.cloud/v3";t.endpointUrl&&(i=t.endpointUrl);try{const t=await fetch(`${i}/files/${r}/${e.id}`,{method:"PUT",headers:o,body:n});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const a=await t.json();return a.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing updateFile: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while updating file")}},vectorizeFile=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let r;r=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/vectorizeFile"};let a="https://uploads.pinata.cloud/v3";t.uploadUrl&&(a=t.uploadUrl);try{const t=await fetch(`${a}/vectorize/files/${e}`,{method:"POST",headers:r});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return await t.json()}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing vectorize file: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while vectorizing file")}},vectorizeQuery=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let r;r=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/vectorQuery"};let a="https://uploads.pinata.cloud/v3";t.uploadUrl&&(a=t.uploadUrl);const n=JSON.stringify({text:e.query});try{const o=await fetch(`${a}/vectorize/groups/${e.groupId}/query`,{method:"POST",headers:r,body:n});if(!o.ok){const t=await o.text();if(401===o.status||403===o.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,o.status,{error:t,code:"AUTH_ERROR",metadata:{requestUrl:o.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,o.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:o.url}})}const i=(await o.json()).data;if(e.returnFile){if(0===i.matches.length)throw new chunkBK3CLF3Z_js.PinataError("No files returned in query to fetch");const e=i.matches[0].cid;return await getCid(t,e,"files")}return i}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing vectorize file: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while vectorizing file")}},queue=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const r=new URLSearchParams({includesCount:"false"});if(e){const{cid:t,status:a,sort:n,limit:o,pageToken:i}=e;t&&r.append("cid",t.toString()),a&&r.append("status",a.toString()),n&&r.append("sort",n.toString()),o&&r.append("limit",o.toString()),i&&r.append("pageToken",i.toString())}let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);const n=`${a}/files/public/pin_by_cid?${r.toString()}`;let o;o=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/pinJobs"};try{const t=await fetch(n,{method:"GET",headers:o});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return e.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing pinJobs: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while listing pin jobs")}},deletePinRequest=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let r;r=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/deletePinRequest"};let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);try{const t=await fetch(`${a}/files/public/pin_by_cid/${e}`,{method:"DELETE",headers:r});if(!t.ok){const e=await t.text();if(401===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError("HTTP error",t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return"OK"}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error deleting pin by request: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while deleting pin by CID request")}},getCid=async(t,e,r,a)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let n,o=`${t?.pinataGateway}/${r}/${e}`;const i=new URLSearchParams;a&&(a.width&&i.append("img-width",a.width.toString()),a.height&&i.append("img-height",a.height.toString()),a.dpr&&i.append("img-dpr",a.dpr.toString()),a.fit&&i.append("img-fit",a.fit),a.gravity&&i.append("img-gravity",a.gravity),a.quality&&i.append("img-quality",a.quality.toString()),a.format&&i.append("img-format",a.format),void 0!==a.animation&&i.append("img-anim",a.animation.toString()),a.sharpen&&i.append("img-sharpen",a.sharpen.toString()),!0===a.onError&&i.append("img-onerror","redirect"),a.metadata&&i.append("img-metadata",a.metadata)),t?.pinataGatewayKey&&i.append("pinataGatewayToken",t.pinataGatewayKey);const s=i.toString();if(s&&(o+=`?${s}`),"ipfs"===r){const t=await fetch(o);if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication Failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=t.headers.get("content-type")?.split(";")[0]||null;n=e?.includes("application/json")?await t.json():e?.includes("text/")?await t.text():await t.blob();return{data:n,contentType:e}}const u=Math.floor((new Date).getTime()/1e3),c=JSON.stringify({url:o,date:u,expires:30,method:"GET"});let h,d="https://api.pinata.cloud/v3";t.endpointUrl&&(d=t.endpointUrl),h=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/getCid"};const l=await fetch(`${d}/files/sign`,{method:"POST",headers:h,body:c}),p=await l.json();try{const t=await fetch(p.data);if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication Failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=t.headers.get("content-type")?.split(";")[0]||null;n=e?.includes("application/json")?await t.json():e?.includes("text/")?await t.text():await t.blob();return{data:n,contentType:e}}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing getCid: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while getting CID contents")}},convertIPFSUrl=async(t,e,r)=>{let a,n=r||t?.pinataGateway||"https://gateway.pinata.cloud";return a=await chunkBK3CLF3Z_js.convertToDesiredGateway(e,n),a},createAccessLink=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=e?.gateway?e.gateway.startsWith("https://")?e.gateway:`https://${e.gateway}`:t.pinataGateway;let n=`${a}/files/${e.cid}`;const o=new URLSearchParams;r&&(r.width&&o.append("img-width",r.width.toString()),r.height&&o.append("img-height",r.height.toString()),r.dpr&&o.append("img-dpr",r.dpr.toString()),r.fit&&o.append("img-fit",r.fit),r.gravity&&o.append("img-gravity",r.gravity),r.quality&&o.append("img-quality",r.quality.toString()),r.format&&o.append("img-format",r.format),void 0!==r.animation&&o.append("img-anim",r.animation.toString()),r.sharpen&&o.append("img-sharpen",r.sharpen.toString()),!0===r.onError&&o.append("img-onerror","redirect"),r.metadata&&o.append("img-metadata",r.metadata));const i=o.toString();i&&(n+=`?${i}`);const s=e?.date||Math.floor((new Date).getTime()/1e3),u=JSON.stringify({url:n,date:s,expires:e.expires,method:"GET"});let c,h="https://api.pinata.cloud/v3";t.endpointUrl&&(h=t.endpointUrl),c=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/createSignURL"};try{const t=await fetch(`${h}/files/private/download_link`,{method:"POST",headers:c,body:u});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication Failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return(await t.json()).data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing createSignedURL: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while getting signed url")}},addToGroup=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=t=>new Promise((e=>{setTimeout(e,t)})),n=[];let o;o=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addToGroup"};let i="https://api.pinata.cloud/v3";t.endpointUrl&&(i=t.endpointUrl);for(const t of e.files)try{const s=await fetch(`${i}/groups/${r}/${e.groupId}/ids/${t}`,{method:"PUT",headers:o});if(await a(300),!s.ok){const t=await s.text();if(401===s.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,s.status,{error:t,code:"AUTH_ERROR",metadata:{requestUrl:s.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,s.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:s.url}})}n.push({id:t,status:s.statusText})}catch(e){let r;r=e instanceof chunkBK3CLF3Z_js.PinataError?e.message:e instanceof Error?`Error adding file ${t} to group: ${e.message}`:`An unknown error occurred while adding file ${t} to group`,n.push({id:t,status:r})}return n},createGroup=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=JSON.stringify({name:e.name,is_public:e.isPublic});let n;n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createGroup"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const t=await fetch(`${o}/groups/${r}`,{method:"POST",headers:n,body:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return e.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing createGroup: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while creating a group")}},deleteGroup=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteGroup"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/groups/${r}/${e.groupId}`,{method:"DELETE",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return t.statusText}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing deleteGroup: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while deleting a group")}},getGroup=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getGroup"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/groups/${r}/${e.groupId}`,{method:"GET",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const o=await t.json();return o.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing getGroup: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while getting info for a group")}},listGroups=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listGroups"};const n=new URLSearchParams;if(r){const{pageToken:t,name:e,limit:a,isPublic:o}=r;t&&n.append("pageToken",t.toString()),o&&n.append("isPublic",o.toString()),e&&n.append("name",e),void 0!==a&&n.append("limit",a.toString())}let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const t=await fetch(`${o}/groups/${e}?${n.toString()}`,{method:"GET",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const r=await t.json();return r.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing listGroups: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while listing groups")}},removeFromGroup=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=t=>new Promise((e=>{setTimeout(e,t)})),n=[];let o;o=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addToGroup"};let i="https://api.pinata.cloud/v3";t.endpointUrl&&(i=t.endpointUrl);for(const t of e.files)try{const s=await fetch(`${i}/groups/${r}/${e.groupId}/ids/${t}`,{method:"DELETE",headers:o});if(await a(300),!s.ok){const t=await s.text();if(401===s.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,s.status,{error:t,code:"AUTH_ERROR",metadata:{requestUrl:s.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,s.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:s.url}})}n.push({id:t,status:s.statusText})}catch(e){let r;r=e instanceof chunkBK3CLF3Z_js.PinataError?e.message:e instanceof Error?`Error adding file ${t} to group: ${e.message}`:`An unknown error occurred while adding file ${t} to group`,n.push({id:t,status:r})}return n},updateGroup=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=JSON.stringify({name:e.name,is_public:e.isPublic});let n;n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateGroup"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const t=await fetch(`${o}/groups/${r}/${e.groupId}`,{method:"PUT",headers:n,body:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const i=await t.json();return i.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing updateGroup: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while updating group")}},createKey=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let r;r=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createKey"};const a=JSON.stringify(e);let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/pinata/keys`,{method:"POST",headers:r,body:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return await t.json()}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing createKey: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while creating API key")}},listKeys=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let r;r=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listKeys"};const a=new URLSearchParams;if(e){const{offset:t,name:r,revoked:n,limitedUse:o,exhausted:i}=e;t&&a.append("offset",t.toString()),void 0!==n&&a.append("revoked",n.toString()),void 0!==o&&a.append("limitedUse",o.toString()),void 0!==i&&a.append("exhausted",i.toString()),r&&a.append("name",r)}let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/pinata/keys?${a.toString()}`,{method:"GET",headers:r});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return(await t.json()).keys}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing listKeys: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while listing API keys")}},wait2=t=>new Promise((e=>{setTimeout(e,t)})),revokeKeys=async(t,e)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let r;t.customHeaders&&Object.keys(t.customHeaders).length>0?(r={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders},r={...t.customHeaders}):r={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/revokeKeys"};const a=[];let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);for(const t of e)try{const e=await fetch(`${n}/pinata/keys/${t}`,{method:"PUT",headers:r});if(await wait2(300),!e.ok){const t=await e.text();if(401===e.status||403===e.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${t}`,e.status,{error:t,code:"AUTH_ERROR",metadata:{requestUrl:e.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,e.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:e.url}})}const o=await e.json();a.push({key:t,status:o})}catch(e){let r;r=e instanceof chunkBK3CLF3Z_js.PinataError?e.message:e instanceof Error?`Error revoking key ${t}: ${e.message}`:`An unknown error occurred while revoking key ${t}`,a.push({key:t,status:r})}return a},uploadBase64=async(t,e,r,a)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const n=a?.keys||t?.pinataJwt,o=a?.metadata?.name?a?.metadata?.name:"base64 string",i=Buffer.from(e,"base64"),s=new Blob([i]),u=new FormData;let c;u.append("file",s,o),u.append("network",r),u.append("name",o),a?.groupId&&u.append("group_id",a.groupId),a?.metadata?.keyvalues&&u.append("keyvalues",JSON.stringify(a.metadata.keyvalues)),c=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/base64"};let h="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(h=t.uploadUrl),a?.url)try{const t=await fetch(a.url,{method:"POST",body:u});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return e.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing base64: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while trying to upload base64")}try{const t=await fetch(`${h}/files`,{method:"POST",headers:c,body:u});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=(await t.json()).data;if(a?.vectorize){const r=await fetch(`${h}/vectorize/files/${e.id}`,{method:"POST",headers:{Authorization:`Bearer ${n}`}});if(r.ok)return e.vectorized=!0,e;{const e=await r.text();throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error during vectorization: ${e}`,r.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}}return e}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing base64: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while trying to upload base64")}},createSignedUploadURL=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a={date:e?.date||Math.floor((new Date).getTime()/1e3),expires:e.expires};e.groupId&&(a.group_id=e.groupId),e.name&&(a.filename=e.name),e.keyvalues&&(a.keyvalues=e.keyvalues),r&&(a.network=r),e.streamable&&(a.streamable=e.streamable),e.maxFileSize&&(a.max_file_size=e.maxFileSize),e.mimeTypes&&(a.allow_mime_types=e.mimeTypes);let n,o="https://uploads.pinata.cloud/v3";t.uploadUrl&&(o=t.uploadUrl),n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/createSignURL"};let i=0;for(;i<=3;)try{const t=await fetch(`${o}/files/sign`,{method:"POST",headers:n,cache:"no-store",body:JSON.stringify(a)});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication Failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});const r=new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}});if(t.status>=400&&t.status<500&&429!==t.status)throw r;throw r}return(await t.json()).data}catch(t){if(t instanceof chunkBK3CLF3Z_js.AuthenticationError)throw t;if(t instanceof chunkBK3CLF3Z_js.NetworkError&&t.statusCode&&t.statusCode>=400&&t.statusCode<500&&429!==t.statusCode)throw t;if(i++,i>3){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing createSignedURL after 3 retries: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while getting signed url after 3 retries")}const e=Math.min(1e3*Math.pow(2,i-1),4e3);await new Promise((t=>setTimeout(t,e)))}return Promise.reject(new chunkBK3CLF3Z_js.PinataError("Unexpected error: retry loop completed without resolution"))},uploadFile=async(t,e,r,a)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const n=a?.keys||t.pinataJwt;let o,i="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(i=t.uploadUrl),e.size>94371840){let o;o=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/file"};const s=a?.metadata?.name||e.name||"File from SDK";let u=`filename ${btoa(s)},filetype ${btoa(e.type)},network ${btoa(r)}`;a?.groupId&&(u+=`,group_id ${btoa(a.groupId)}`),a?.metadata?.keyvalues&&(u+=`,keyvalues ${btoa(JSON.stringify(a.metadata.keyvalues))}`),a?.streamable&&(u+=`,streamable ${btoa("true")}`);let c=`${i}/files`;a?.url&&(c=a.url);const h=await fetch(c,{method:"POST",headers:{"Upload-Length":`${e.size}`,"Upload-Metadata":u,...o}}),d=h.headers.get("Location");if(!d){const t=await h.text();throw new chunkBK3CLF3Z_js.NetworkError("Upload URL not provided",h.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:h.url,requestHeaders:h.headers}})}const l=52428801,p=Math.ceil(e.size/l);let w,f=0;for(let t=0;t<p;t++){const t=e.slice(f,f+l);let r=0;const a=5;for(;r<=a;)try{if(w=await fetch(d,{method:"PATCH",headers:{"Content-Type":"application/offset+octet-stream","Upload-Offset":f.toString(),...o},body:t}),w.ok)break;{const t=await w.text();throw new Error(`HTTP ${w.status}: ${t}`)}}catch(t){if(r++,r>a){const e=w?await w.text().catch((()=>"Unknown error")):t instanceof Error?t.message:String(t);throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error during chunk upload after ${a} retries: ${e}`,w?.status||0,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:w?.url||d,retriesAttempted:a}})}const e=Math.min(1e3*Math.pow(2,r-1),1e4);await new Promise((t=>setTimeout(t,e)))}f+=t.size}if(204===w.status){const o=w.headers.get("upload-cid");if(!t.pinataJwt){return{id:"",name:"",cid:o,size:e.size,created_at:"",number_of_files:1,group_id:null,mime_type:"",keyvalues:{},vectorized:!1,network:""}}let s;s=t.endpointUrl?t.endpointUrl:"https://api.pinata.cloud/v3";const u=await fetch(`${s}/files/${r}?cid=${o}`,{method:"GET",headers:{Authorization:`Bearer ${n}`}}),c=(await u.json()).data.files[0];if(a?.vectorize){const t=await fetch(`${i}/vectorize/files/${c.id}`,{method:"POST",headers:{Authorization:`Bearer ${n}`}});if(t.ok)return c.vectorized=!0,c;{const e=await t.text();throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error during vectorization: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}}return c}}o=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/file"};const s=new FormData;if(s.append("file",e,e.name),s.append("network",r),s.append("name",a?.metadata?.name||e.name||"File from SDK"),a?.groupId&&s.append("group_id",a.groupId),a?.metadata?.keyvalues&&s.append("keyvalues",JSON.stringify(a.metadata.keyvalues)),a?.streamable&&s.append("streamable","true"),a?.url)try{const t=await fetch(a.url,{method:"POST",headers:o,body:s});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return e.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error uploading file: ${t.message}`,void 0,{error:t.toString()});throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while trying to upload file")}try{const t=await fetch(`${i}/files`,{method:"POST",headers:o,body:s});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=(await t.json()).data;if(a?.vectorize){const r=await fetch(`${i}/vectorize/files/${e.id}`,{method:"POST",headers:{Authorization:`Bearer ${n}`}});if(r.ok)return e.vectorized=!0,e;{const e=await r.text();throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error during vectorization: ${e}`,r.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}}return e}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error uploading file: ${t.message}`,void 0,{error:t.toString()});throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while trying to upload file")}},uploadFileArray=async(t,e,r,a)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const n=a?.keys||t?.pinataJwt,o=a?.metadata?.name||"folder_from_sdk",i=new FormData;for(const t of Array.from(e)){const e=t.webkitRelativePath||`${o}/${t.name}`;i.append("file",t,e)}let s;i.append("pinataMetadata",JSON.stringify({name:o,keyvalues:a?.metadata?.keyvalues})),i.append("pinataOptions",JSON.stringify({groupId:a?.groupId,cidVersion:1})),s=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/fileArray"};let u="https://api.pinata.cloud/pinning/pinFileToIPFS";t.legacyUploadUrl&&(u=t.legacyUploadUrl);try{const t=await fetch(`${u}`,{method:"POST",headers:s,body:i});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return{id:e.ID,name:e.Name,cid:e.IpfsHash,size:e.PinSize,created_at:e.Timestamp,number_of_files:e.NumberOfFiles,mime_type:e.MimeType,group_id:e.GroupId,keyvalues:e.Keyvalues,vectorized:!1,network:"public"}}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing fileArray: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while uploading an array of files")}},uploadJson=async(t,e,r,a)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const n=a?.keys||t?.pinataJwt,o=JSON.stringify(e),i=new Blob([o]),s=new File([i],"data.json",{type:"application/json"}),u=new FormData;let c;u.append("file",s,s.name),u.append("network",r),u.append("name",a?.metadata?.name||s.name||"File from SDK"),a?.groupId&&u.append("group_id",a.groupId),a?.metadata?.keyvalues&&u.append("keyvalues",JSON.stringify(a.metadata.keyvalues)),c=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/json"};let h="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(h=t.uploadUrl),a?.url)try{const t=await fetch(a.url,{method:"POST",body:u});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return e.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing base64: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while trying to upload base64")}try{const t=await fetch(`${h}/files`,{method:"POST",headers:c,body:u});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=(await t.json()).data;if(a?.vectorize){const r=await fetch(`${h}/vectorize/files/${e.id}`,{method:"POST",headers:{Authorization:`Bearer ${n}`}});if(r.ok)return e.vectorized=!0,e;{const e=await r.text();throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error during vectorization: ${e}`,r.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}}return e}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing json: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while uploading json")}},uploadUrl=async(t,e,r,a)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const n=a?.keys||t?.pinataJwt,o=new FormData,i=await fetch(e);if(!i.ok){const t=await i.text();throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${t}`,i.status,{error:t,code:"HTTP_ERROR",metadata:{requestUrl:i.url}})}const s=await i.arrayBuffer(),u=new Blob([s]),c=a?.metadata?.name??"url_upload",h=new File([u],c);let d;o.append("file",h,c),o.append("network",r),o.append("name",c),a?.groupId&&o.append("group_id",a.groupId),a?.metadata?.keyvalues&&o.append("keyvalues",JSON.stringify(a.metadata.keyvalues)),d=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/url"};let l="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(l=t.uploadUrl),a?.url)try{const t=await fetch(a.url,{method:"POST",body:o});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return e.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing base64: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while trying to upload base64")}try{const t=await fetch(`${l}/files`,{method:"POST",headers:d,body:o});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=(await t.json()).data;if(a?.vectorize){const r=await fetch(`${l}/vectorize/files/${e.id}`,{method:"POST",headers:{Authorization:`Bearer ${n}`}});if(r.ok)return e.vectorized=!0,e;{const e=await r.text();throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error during vectorization: ${e}`,r.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}}return e}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing url: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while uploading by url")}},uploadCid=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=r?.keys||t?.pinataJwt;let n;n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${a}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${a}`,"Content-Type":"application/json",Source:"sdk/cid"};const o={cid:e,name:r?.metadata?r?.metadata?.name:e,keyvalues:r?.metadata?.keyvalues,group_id:r?.groupId,host_nodes:r?.peerAddresses},i=JSON.stringify(o);let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);try{const t=await fetch(`${s}/files/public/pin_by_cid`,{method:"POST",headers:n,body:i});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const e=await t.json();return e.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing cid: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while pinning by CID")}},Analytics=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t),this.requests=new AnalyticsRequests(this.config),this.bandwidth=new AnalyticsBandwidth(this.config)}updateConfig(t){this.config=t,this.requests.updateConfig(t),this.bandwidth.updateConfig(t)}summary(t){return new TimeIntervalAnalyticsBuilder(this.config,t.domain,t.start,t.end,t.interval)}},calculateDates=t=>{const e=new Date,r=new Date;return r.setDate(r.getDate()-t),{start:r.toISOString().split("T")[0],end:e.toISOString().split("T")[0]}},AnalyticsFilter=class{constructor(t,e,r,a){this.config=t,this.query={gateway_domain:e,start_date:r,end_date:a,sort_by:"requests",attribute:"cid"}}cid(t){return this.query.attribute="cid",t&&(this.query.cid=t),this}fileName(t){return this.query.attribute="file_name",t&&(this.query.file_name=t),this}userAgent(t){return this.query.attribute="user_agent",t&&(this.query.user_agent=t),this}country(t){return this.query.attribute="country",t&&(this.query.country=t),this}region(t){return this.query.attribute="region",t&&(this.query.region=t),this}referer(t){return this.query.attribute="referer",t&&(this.query.referer=t),this}limit(t){return this.query.limit=t,this}sort(t){return this.query.sort_order=t,this}days(t){const{start:e,end:r}=calculateDates(t);return this.query.start_date=e,this.query.end_date=r,this}then(t,e){return analyticsTopUsage(this.config,this.query).then(t,e)}},AnalyticsBandwidth=class extends AnalyticsFilter{constructor(t){super(t,"","",""),this.query.sort_by="bandwidth"}updateConfig(t){this.config=t}customDates(t,e){return t&&(this.query.start_date=t),e&&(this.query.end_date=e),this}from(t){return this.query.gateway_domain=t,this}},AnalyticsBuilder=class{constructor(t,e){this.requestCount=0,this.lastRequestTime=0,this.MAX_REQUESTS_PER_MINUTE=30,this.MINUTE_IN_MS=6e4,this.config=t,this.query=e}cid(t){return this.query.cid=t,this}fileName(t){return this.query.file_name=t,this}userAgent(t){return this.query.user_agent=t,this}country(t){return this.query.country=t,this}region(t){return this.query.region=t,this}referer(t){return this.query.referer=t,this}limit(t){return this.query.limit=t,this}sort(t){return this.query.sort_order=t,this}async getAnalytics(){throw new Error("getAnalytics method must be implemented in derived class")}then(t,e){return this.getAnalytics().then(t,e)}},AnalyticsRequests=class extends AnalyticsFilter{constructor(t){super(t,"","",""),this.query.sort_by="requests"}updateConfig(t){this.config=t}customDates(t,e){return t&&(this.query.start_date=t),e&&(this.query.end_date=e),this}from(t){return this.query.gateway_domain=t,this}},TimeIntervalAnalyticsBuilder=class extends AnalyticsBuilder{constructor(t,e,r,a,n){super(t,{gateway_domain:e,start_date:r,end_date:a,date_interval:n})}sortBy(t){return this.query.sort_by=t,this}async getAnalytics(){return analyticsDateInterval(this.config,this.query)}async all(){return this.getAnalytics()}},FilterGroups=class{constructor(t,e){this.query={},this.config=t,this.privacy=e}name(t){return this.query.name=t,this}limit(t){return this.query.limit=t,this}isPublic(t){return this.query.isPublic=t,this}pageToken(t){return this.query.pageToken=t,this}then(t,e){return this.fetchPage().then((t=>(this.nextPageToken=t.next_page_token,t))).then(t,e)}async fetchPage(){return this.nextPageToken&&(this.query.pageToken=this.nextPageToken),listGroups(this.config,this.privacy,this.query)}async*[Symbol.asyncIterator](){for(;;){const t=await this.fetchPage();for(const e of t.groups)yield e;if(!t.next_page_token)break;this.nextPageToken=t.next_page_token}}async all(){const t=[];for await(const e of this)t.push(e);return t}},PublicGroups=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}updateConfig(t){this.config=t}create(t){return createGroup(this.config,t,"public")}list(){return new FilterGroups(this.config,"public")}get(t){return getGroup(this.config,t,"public")}addFiles(t){return addToGroup(this.config,t,"public")}removeFiles(t){return removeFromGroup(this.config,t,"public")}update(t){return updateGroup(this.config,t,"public")}delete(t){return deleteGroup(this.config,t,"public")}},PrivateGroups=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}updateConfig(t){this.config=t}create(t){return createGroup(this.config,t,"private")}list(){return new FilterGroups(this.config,"private")}get(t){return getGroup(this.config,t,"private")}addFiles(t){return addToGroup(this.config,t,"private")}removeFiles(t){return removeFromGroup(this.config,t,"private")}update(t){return updateGroup(this.config,t,"private")}delete(t){return deleteGroup(this.config,t,"private")}},Groups=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t),this.public=new PublicGroups(t),this.private=new PrivateGroups(t)}updateConfig(t){this.config=t}},Keys=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}updateConfig(t){this.config=t}create(t){return createKey(this.config,t)}list(){return new FilterKeys(this.config)}revoke(t){return revokeKeys(this.config,t)}},FilterKeys=class{constructor(t){this.query={},this.config=t}offset(t){return this.query.offset=t,this}revoked(t){return this.query.revoked=t,this}limitedUse(t){return this.query.limitedUse=t,this}exhausted(t){return this.query.exhausted=t,this}name(t){return this.query.name=t,this}then(t,e){return listKeys(this.config,this.query).then(t,e)}async*[Symbol.asyncIterator](){let t=!0,e=0;for(;t;){this.query.offset=e;const r=await listKeys(this.config,this.query);for(const t of r)yield t;0===r.length?t=!1:e+=r.length}}async all(){const t=[];for await(const e of this)t.push(e);return t}},Gateways=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t),this.public=new PublicGateways(t),this.private=new PrivateGateways(t)}updateConfig(t){this.config=t}},OptimizeImageCreateAccessLink=class{constructor(t,e){this.imgOpts={},this.config=t,this.urlOpts=e}optimizeImage(t){return this.imgOpts={...this.imgOpts,...t},this}then(t,e){return createAccessLink(this.config,this.urlOpts,this.imgOpts).then(t,e)}},OptimizeImageGetCid=class{constructor(t,e,r){this.options={},this.config=t,this.cid=e,this.gatewayType=r}optimizeImage(t){return this.options={...this.options,...t},this}then(t,e){return getCid(this.config,this.cid,this.gatewayType,this.options).then(t,e)}},PrivateGateways=class{constructor(t){this.config=t}get(t){return new OptimizeImageGetCid(this.config,t,"files")}createAccessLink(t){return new OptimizeImageCreateAccessLink(this.config,t)}},PublicGateways=class{constructor(t){this.config=t}get(t){return new OptimizeImageGetCid(this.config,t,"ipfs")}convert(t,e){return convertIPFSUrl(this.config,t,e)}},getFile=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getFile"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/files/${r}/${e}`,{method:"GET",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}const o=await t.json();return o.data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing getGroup: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while getting info for a group")}},FilterFiles=class{constructor(t,e){this.query={},this.config=t,this.privacy=e}name(t){return this.query.name=t,this}group(t){return this.query.group=t,this}cid(t){return this.query.cid=t,this}mimeType(t){return this.query.mimeType=t,this}order(t){return this.query.order=t,this}limit(t){return this.query.limit=t,this}cidPending(t){return this.query.cidPending=t,this}keyvalues(t){return this.query.metadata=t,this}noGroup(t){return this.query.noGroup=t,this}pageToken(t){return this.query.pageToken=t,this}then(t,e){return this.fetchPage().then(t,e)}async fetchPage(){this.currentPageToken&&(this.query.pageToken=this.currentPageToken);const t=await listFiles(this.config,this.privacy,this.query);return this.currentPageToken=t.next_page_token,t}async*[Symbol.asyncIterator](){for(;;){const t=await this.fetchPage();for(const e of t.files)yield e;if(!this.currentPageToken)break}}async all(){const t=[];for await(const e of this)t.push(e);return t}},FilterQueue=class{constructor(t){this.query={},this.requestCount=0,this.lastRequestTime=0,this.MAX_REQUESTS_PER_MINUTE=30,this.MINUTE_IN_MS=6e4,this.config=t}cid(t){return this.query.cid=t,this}status(t){return this.query.status=t,this}pageLimit(t){return this.query.limit=t,this}pageToken(t){return this.query.pageToken=t,this}async fetchPage(){this.currentPageToken&&(this.query.pageToken=this.currentPageToken);const t=await queue(this.config,this.query);return this.currentPageToken=t.next_page_token,t}sort(t){return this.query.sort=t,this}then(t,e){return queue(this.config,this.query).then(t,e)}async rateLimit(){this.requestCount++;const t=Date.now();if(this.requestCount>=this.MAX_REQUESTS_PER_MINUTE){const e=t-this.lastRequestTime;if(e<this.MINUTE_IN_MS){const t=this.MINUTE_IN_MS-e;await new Promise((e=>setTimeout(e,t)))}this.requestCount=0}this.lastRequestTime=Date.now()}async*[Symbol.asyncIterator](){for(;;){const t=await this.fetchPage();for(const e of t.jobs)yield e;if(!this.currentPageToken)break}}async all(){const t=[];for await(const e of this)t.push(e);return t}},PublicFiles=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}list(){return new FilterFiles(this.config,"public")}get(t){return getFile(this.config,t,"public")}delete(t){return deleteFile(this.config,t,"public")}update(t){return updateFile(this.config,t,"public")}addSwap(t){return swapCid(this.config,t,"public")}getSwapHistory(t){return swapHistory(this.config,t,"public")}deleteSwap(t){return deleteSwap(this.config,t,"public")}queue(){return new FilterQueue(this.config)}deletePinRequest(t){return deletePinRequest(this.config,t)}},PrivateFiles=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}list(){return new FilterFiles(this.config,"private")}get(t){return getFile(this.config,t,"private")}delete(t){return deleteFile(this.config,t,"private")}update(t){return updateFile(this.config,t,"private")}addSwap(t){return swapCid(this.config,t,"private")}getSwapHistory(t){return swapHistory(this.config,t,"private")}deleteSwap(t){return deleteSwap(this.config,t,"private")}vectorize(t){return vectorizeFile(this.config,t)}queryVectors(t){return vectorizeQuery(this.config,t)}deleteVectors(t){return deleteFileVectors(this.config,t)}},Files=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t),this.public=new PublicFiles(t),this.private=new PrivateFiles(t)}updateConfig(t){this.config=t}},UploadBuilder=class{constructor(t,e,...r){this.metadata={},this.config=t,this.uploadFunction=e,this.args=r}name(t){return this.metadata||(this.metadata={}),this.metadata.name=t,this}keyvalues(t){return this.metadata||(this.metadata={}),this.metadata.keyvalues=t,this}key(t){return this.keys=t,this}vectorize(){return this.vector=!0,this}url(t){return this.uploadUrl=t,this}group(t){return this.groupId=t,this}streamable(){return this.isStreamable=!0,this}peerAddress(t){return this.peerAddresses=t,this}then(t,e){const r=this.args[this.args.length-1]||{};return this.metadata&&(r.metadata=this.metadata),this.keys&&(r.keys=this.keys),this.groupId&&(r.groupId=this.groupId),this.vector&&(r.vectorize=this.vector),this.uploadUrl&&(r.url=this.uploadUrl),this.isStreamable&&(r.streamable=this.isStreamable),this.peerAddresses&&(r.peerAddresses=this.peerAddresses),this.args[this.args.length-1]=r,this.uploadFunction(this.config,...this.args).then(t,e)}},PublicUpload=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}updateConfig(t){this.config=t}file(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadFile(t,e,"public",r)),t,e)}fileArray(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadFileArray(t,e,"public",r)),t,e)}base64(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadBase64(t,e,"public",r)),t,e)}url(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadUrl(t,e,"public",r)),t,e)}json(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadJson(t,e,"public",r)),t,e)}cid(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadCid(t,e,r)),t,e)}createSignedURL(t){return createSignedUploadURL(this.config,t,"public")}},PrivateUpload=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}updateConfig(t){this.config=t}file(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadFile(t,e,"private",r)),t,e)}base64(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadBase64(t,e,"private",r)),t,e)}url(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadUrl(t,e,"private",r)),t,e)}json(t,e){return new UploadBuilder(this.config,((t,e,r)=>uploadJson(t,e,"private",r)),t,e)}createSignedURL(t){return createSignedUploadURL(this.config,t,"private")}},Upload=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t),this.public=new PublicUpload(t),this.private=new PrivateUpload(t)}updateConfig(t){this.config=t}},addSignature=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");const a=JSON.stringify({signature:e.signature,address:e.address});let n;n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addSignature"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const t=await fetch(`${o}/files/${r}/signature/${e.cid}`,{method:"POST",headers:n,body:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});if(403===t.status)throw new chunkBK3CLF3Z_js.PinataError("Unauthorized signing, you must be the original owner of the file and it must not have a signature",t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return(await t.json()).data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing addSignature: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while adding signature to CID")}},getSignature=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getSignature"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/files/${r}/signature/${e}`,{method:"GET",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return(await t.json()).data}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing getSignature: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while fetching signature for CID")}},removeSignature=async(t,e,r)=>{if(!t)throw new chunkBK3CLF3Z_js.ValidationError("Pinata configuration is missing");let a;a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/removeSignature"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{const t=await fetch(`${n}/files/${r}/signature/${e}`,{method:"DELETE",headers:a});if(!t.ok){const e=await t.text();if(401===t.status||403===t.status)throw new chunkBK3CLF3Z_js.AuthenticationError(`Authentication failed: ${e}`,t.status,{error:e,code:"AUTH_ERROR",metadata:{requestUrl:t.url}});throw new chunkBK3CLF3Z_js.NetworkError(`HTTP error: ${e}`,t.status,{error:e,code:"HTTP_ERROR",metadata:{requestUrl:t.url}})}return"OK"}catch(t){if(t instanceof chunkBK3CLF3Z_js.PinataError)throw t;if(t instanceof Error)throw new chunkBK3CLF3Z_js.PinataError(`Error processing addSignature: ${t.message}`);throw new chunkBK3CLF3Z_js.PinataError("An unknown error occurred while adding signature to CID")}},PublicSignatures=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t)}updateConfig(t){this.config=t}add(t){return addSignature(this.config,t,"public")}get(t){return getSignature(this.config,t,"public")}delete(t){return removeSignature(this.config,t,"public")}},Signatures=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t),this.public=new PublicSignatures(t)}updateConfig(t){this.config=t}},PinataSDK=class{constructor(t){this.config=chunkBK3CLF3Z_js.formatConfig(t),this.files=new Files(this.config),this.upload=new Upload(this.config),this.gateways=new Gateways(this.config),this.keys=new Keys(this.config),this.groups=new Groups(this.config),this.analytics=new Analytics(this.config),this.signatures=new Signatures(this.config)}setNewHeaders(t){this.config||(this.config={pinataJwt:"",customHeaders:{}}),this.config.customHeaders={...this.config.customHeaders,...t},this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config),this.analytics.updateConfig(this.config),this.signatures.updateConfig(this.config)}setNewJwt(t){this.config||(this.config={pinataJwt:""}),this.config.pinataJwt=t,this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config),this.analytics.updateConfig(this.config),this.signatures.updateConfig(this.config)}testAuthentication(){return testAuthentication(this.config)}};Object.defineProperty(exports,"AuthenticationError",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.AuthenticationError}}),Object.defineProperty(exports,"NetworkError",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.NetworkError}}),Object.defineProperty(exports,"PinataError",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.PinataError}}),Object.defineProperty(exports,"ValidationError",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.ValidationError}}),Object.defineProperty(exports,"containsCID",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.containsCID}}),Object.defineProperty(exports,"convertToDesiredGateway",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.convertToDesiredGateway}}),Object.defineProperty(exports,"formatConfig",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.formatConfig}}),Object.defineProperty(exports,"getFileIdFromUrl",{enumerable:!0,get:function(){return chunkBK3CLF3Z_js.getFileIdFromUrl}}),exports.PinataSDK=PinataSDK,exports.addToGroup=addToGroup,exports.analyticsDateInterval=analyticsDateInterval,exports.analyticsTopUsage=analyticsTopUsage,exports.convertIPFSUrl=convertIPFSUrl,exports.createAccessLink=createAccessLink,exports.createGroup=createGroup,exports.createKey=createKey,exports.createSignedUploadURL=createSignedUploadURL,exports.deleteFile=deleteFile,exports.deleteFileVectors=deleteFileVectors,exports.deleteGroup=deleteGroup,exports.deletePinRequest=deletePinRequest,exports.deleteSwap=deleteSwap,exports.getCid=getCid,exports.getGroup=getGroup,exports.listFiles=listFiles,exports.listGroups=listGroups,exports.listKeys=listKeys,exports.pinnedFileCount=pinnedFileCount,exports.queue=queue,exports.removeFromGroup=removeFromGroup,exports.revokeKeys=revokeKeys,exports.swapCid=swapCid,exports.swapHistory=swapHistory,exports.testAuthentication=testAuthentication,exports.totalStorageUsage=totalStorageUsage,exports.updateFile=updateFile,exports.updateGroup=updateGroup,exports.uploadBase64=uploadBase64,exports.uploadCid=uploadCid,exports.uploadFile=uploadFile,exports.uploadFileArray=uploadFileArray,exports.uploadJson=uploadJson,exports.uploadUrl=uploadUrl,exports.vectorizeFile=vectorizeFile,exports.vectorizeQuery=vectorizeQuery;
//# sourceMappingURL=/sm/6a11f83b6522087c89bf3279e9bfe85d95a6e66272e11178fb2a792b6a2efda4.map